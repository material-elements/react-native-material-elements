// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render correctly 1`] = `
<View
  style={
    [
      {},
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {},
        {},
        undefined,
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#03A9F4",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "height": 40,
          "justifyContent": "center",
          "overflow": "hidden",
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          collapsable={false}
          style={
            {
              "color": "#FAFAFA",
              "fontSize": 14,
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Button should render correctly with inner component 1`] = `
<View
  style={
    [
      {},
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {},
        {},
        undefined,
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#03A9F4",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "height": 40,
          "justifyContent": "center",
          "overflow": "hidden",
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <Text />
      <View
        style={
          [
            {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
